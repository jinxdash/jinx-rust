"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var __defProp = Object.defineProperty;
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, { get: all[name], enumerable: true });
};
exports.AmbientImport = AmbientImport;
exports.AndExpression = AndExpression;
exports.AnonymousImport = AnonymousImport;
exports.ArrayLiteral = ArrayLiteral;
exports.ArrayPattern = ArrayPattern;
exports.Attribute = Attribute;
exports.AutoTraitDeclaration = AutoTraitDeclaration;
exports.AwaitExpression = AwaitExpression;
exports.BaseNode = BaseNode2;
exports.BlockExpression = BlockExpression;
exports.BoxExpression = BoxExpression;
exports.BoxPattern = BoxPattern;
exports.BreakExpression = BreakExpression;
exports.CallExpression = CallExpression;
exports.ClosureFunctionExpression = ClosureFunctionExpression;
exports.ClosureFunctionParameterDeclaration = ClosureFunctionParameterDeclaration;
exports.Comment = Comment;
exports.ComparisonExpression = ComparisonExpression;
exports.ConstTypeParameterDeclaration = ConstTypeParameterDeclaration;
exports.ConstVariableDeclaration = ConstVariableDeclaration;
exports.ContinueExpression = ContinueExpression;
exports.DelimGroup = DelimGroup;
exports.DelimKind = DelimKind;
exports.DereferenceExpression = DereferenceExpression;
exports.DestructuredImport = DestructuredImport;
exports.DocCommentAttribute = DocCommentAttribute;
exports.EnumDeclaration = EnumDeclaration;
exports.EnumMemberDeclaration = EnumMemberDeclaration;
exports.EnumMemberStructDeclaration = EnumMemberStructDeclaration;
exports.EnumMemberTupleDeclaration = EnumMemberTupleDeclaration;
exports.ExpressionAsTypeCast = ExpressionAsTypeCast;
exports.ExpressionPath = ExpressionPath;
exports.ExpressionStatement = ExpressionStatement;
exports.ExpressionTypeCast = ExpressionTypeCast;
exports.ExpressionTypeSelector = ExpressionTypeSelector;
exports.ExternBlockDeclaration = ExternBlockDeclaration;
exports.ExternCrateStatement = ExternCrateStatement;
exports.ExternSpecifier = ExternSpecifier;
exports.Feature = Feature;
exports.ForInBlockExpression = ForInBlockExpression;
exports.FunctionDeclaration = FunctionDeclaration;
exports.FunctionParameterDeclaration = FunctionParameterDeclaration;
exports.FunctionSelfParameterDeclaration = FunctionSelfParameterDeclaration;
exports.FunctionSpread = FunctionSpread;
exports.GenericLtParameterDeclaration = GenericLtParameterDeclaration;
exports.GenericTypeParameterDeclaration = GenericTypeParameterDeclaration;
exports.Identifier = Identifier;
exports.IfBlockExpression = IfBlockExpression;
exports.ImplDeclaration = ImplDeclaration;
exports.Index = Index;
exports.ItemPath = ItemPath;
exports.LbIdentifier = LbIdentifier;
exports.LetScrutinee = LetScrutinee;
exports.LetVariableDeclaration = LetVariableDeclaration;
exports.Literal = Literal;
exports.LiteralKind = LiteralKind;
exports.Loc = Loc;
exports.LoopBlockExpression = LoopBlockExpression;
exports.LtElided = LtElided;
exports.LtIdentifier = LtIdentifier;
exports.LtStatic = LtStatic;
exports.MacroDeclaration = MacroDeclaration;
exports.MacroGroup = MacroGroup;
exports.MacroInlineRuleDeclaration = MacroInlineRuleDeclaration;
exports.MacroInvocation = MacroInvocation;
exports.MacroParameterDeclaration = MacroParameterDeclaration;
exports.MacroRuleDeclaration = MacroRuleDeclaration;
exports.MacroRulesDeclaration = MacroRulesDeclaration;
exports.MatchExpression = MatchExpression;
exports.MatchExpressionCase = MatchExpressionCase;
exports.McIdentifier = McIdentifier;
exports.MemberExpression = MemberExpression;
exports.MinusExpression = MinusExpression;
exports.MinusPattern = MinusPattern;
exports.MissingNode = MissingNode;
exports.ModuleDeclaration = ModuleDeclaration;
exports.NamedImport = NamedImport;
exports.NegativeImplDeclaration = NegativeImplDeclaration;
exports.NodeType = NodeType;
exports.NotExpression = NotExpression;
exports.OperationExpression = OperationExpression;
exports.OrExpression = OrExpression;
exports.PRCD = PRCD;
exports.ParenthesizedExpression = ParenthesizedExpression;
exports.ParenthesizedPattern = ParenthesizedPattern;
exports.PatternVariableDeclaration = PatternVariableDeclaration;
exports.Program = Program;
exports.PubSpecifier = PubSpecifier;
exports.PunctuationToken = PunctuationToken;
exports.RangeLiteral = RangeLiteral;
exports.RangePattern = RangePattern;
exports.RawReferenceExpression = RawReferenceExpression;
exports.ReassignmentExpression = ReassignmentExpression;
exports.ReassignmentOperationExpression = ReassignmentOperationExpression;
exports.ReferenceExpression = ReferenceExpression;
exports.ReferencePattern = ReferencePattern;
exports.RestPattern = RestPattern;
exports.ReturnExpression = ReturnExpression;
exports.Shebang = Shebang;
exports.SizedArrayLiteral = SizedArrayLiteral;
exports.Snippet = Snippet;
exports.SourceFile = SourceFile;
exports.StaticVariableDeclaration = StaticVariableDeclaration;
exports.StructDeclaration = StructDeclaration;
exports.StructLiteral = StructLiteral;
exports.StructLiteralProperty = StructLiteralProperty;
exports.StructLiteralPropertyShorthand = StructLiteralPropertyShorthand;
exports.StructLiteralPropertySpread = StructLiteralPropertySpread;
exports.StructLiteralRestUnassigned = StructLiteralRestUnassigned;
exports.StructPattern = StructPattern;
exports.StructPatternPropertyDestructured = StructPatternPropertyDestructured;
exports.StructPatternPropertyShorthand = StructPatternPropertyShorthand;
exports.StructPropertyDeclaration = StructPropertyDeclaration;
exports.TK = TK;
exports.TraitAliasDeclaration = TraitAliasDeclaration;
exports.TraitDeclaration = TraitDeclaration;
exports.TryBlockExpression = TryBlockExpression;
exports.TupleLiteral = TupleLiteral;
exports.TuplePattern = TuplePattern;
exports.TupleStructDeclaration = TupleStructDeclaration;
exports.TupleStructItemDeclaration = TupleStructItemDeclaration;
exports.TyMacroMatch = TyMacroMatch;
exports.TypeAliasDeclaration = TypeAliasDeclaration;
exports.TypeCall = TypeCall;
exports.TypeCallNamedArgument = TypeCallNamedArgument;
exports.TypeCallNamedBound = TypeCallNamedBound;
exports.TypeDereferenceConst = TypeDereferenceConst;
exports.TypeDereferenceMut = TypeDereferenceMut;
exports.TypeDynBounds = TypeDynBounds;
exports.TypeFnPointer = TypeFnPointer;
exports.TypeFnPointerParameter = TypeFnPointerParameter;
exports.TypeFunction = TypeFunction;
exports.TypeImplBounds = TypeImplBounds;
exports.TypeInferred = TypeInferred;
exports.TypeNever = TypeNever;
exports.TypeParenthesized = TypeParenthesized;
exports.TypePath = TypePath;
exports.TypeReference = TypeReference;
exports.TypeSizedArray = TypeSizedArray;
exports.TypeSlice = TypeSlice;
exports.TypeTraitBound = TypeTraitBound;
exports.TypeTuple = TypeTuple;
exports.UnassignedExpression = UnassignedExpression;
exports.UnionDeclaration = UnionDeclaration;
exports.UnionPattern = UnionPattern;
exports.UnwrapExpression = UnwrapExpression;
exports.UseStatement = UseStatement;
exports.WhereLtBoundDeclaration = WhereLtBoundDeclaration;
exports.WhereTypeBoundDeclaration = WhereTypeBoundDeclaration;
exports.WhileBlockExpression = WhileBlockExpression;
exports.WildcardPattern = WildcardPattern;
exports.YieldExpression = YieldExpression;
exports.rs = parser_exports;